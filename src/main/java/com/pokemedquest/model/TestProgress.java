package com.pokemedquest.model;

import java.time.LocalDateTime; // Using modern Java Date/Time API
import java.time.format.DateTimeFormatter; // For formatting the timestamp in toString

/**
 * Represents a record of a CMAS test result for a specific User.
 */
public class TestProgress {

    // --- Fields ---
    private int progressId;     // Unique identifier for this progress record
    private int userId;         // Foreign key linking to the User who took the test
    private LocalDateTime testTimestamp; // When the test was completed
    private int cmasScore;      // The resulting CMAS score for this test

    // --- Constructors ---

    /**
     * Constructor for creating a new TestProgress record before saving to the database.
     * progressId is typically generated by the database.
     *
     * @param userId The ID of the user who completed the test.
     * @param testTimestamp The date and time the test was completed.
     * @param cmasScore The score achieved on the test.
     */
    public TestProgress(int userId, LocalDateTime testTimestamp, int cmasScore) {
        this.userId = userId;
        this.testTimestamp = testTimestamp;
        this.cmasScore = cmasScore;
    }

    /**
     * Constructor for creating a TestProgress object from data retrieved from the database.
     *
     * @param progressId The unique ID from the database.
     * @param userId The ID of the user who completed the test.
     * @param testTimestamp The date and time the test was completed.
     * @param cmasScore The score achieved on the test.
     */
    public TestProgress(int progressId, int userId, LocalDateTime testTimestamp, int cmasScore) {
        this.progressId = progressId;
        this.userId = userId;
        this.testTimestamp = testTimestamp;
        this.cmasScore = cmasScore;
    }

    // --- Getters and Setters ---

    public int getProgressId() {
        return progressId;
    }

    public void setProgressId(int progressId) {
        this.progressId = progressId;
    }

    public int getUserId() {
        return userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    public LocalDateTime getTestTimestamp() {
        return testTimestamp;
    }

    public void setTestTimestamp(LocalDateTime testTimestamp) {
        this.testTimestamp = testTimestamp;
    }

    public int getCmasScore() {
        return cmasScore;
    }

    public void setCmasScore(int cmasScore) {
        this.cmasScore = cmasScore;
    }

    // --- Optional: toString() method for debugging ---
    @Override
    public String toString() {
        // Optional: Format the timestamp for better readability
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String formattedTimestamp = (testTimestamp != null) ? testTimestamp.format(formatter) : "N/A";

        return "TestProgress{" +
               "progressId=" + progressId +
               ", userId=" + userId +
               ", testTimestamp=" + formattedTimestamp +
               ", cmasScore=" + cmasScore +
               '}';
    }
}